!function(){"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,n(o.key),o)}}function n(t){var n=function(t){if("object"!=e(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=e(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==e(n)?n:n+""}var r=function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.baseUrl=t.baseUrl,this.headers=t.headers},(n=[{key:"getUserInfo",value:function(){return fetch("".concat(this.baseUrl,"/users/me"),{method:"GET",headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"getInitialCards",value:function(){return fetch("".concat(this.baseUrl,"/cards"),{method:"GET",headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"addcards",value:function(e){return fetch("".concat(this.baseUrl,"/cards"),{method:"POST",headers:this.headers,body:JSON.stringify({name:e.place,link:e.link})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"deleteCard",value:function(e){return fetch("".concat(this.baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"addLike",value:function(e){return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"removeLike",value:function(e){return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this.headers}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"editProfile",value:function(e){return fetch("".concat(this.baseUrl,"/users/me"),{method:"PATCH",headers:this.headers,body:JSON.stringify({name:e.name,about:e.about})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}},{key:"editAvatarProfile",value:function(e){return fetch("".concat(this.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:e.avatarLink})}).then((function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))})).catch((function(e){console.log(e)}))}}])&&t(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,n}(),o=(document.querySelector("#popup-profile"),document.querySelector("#input-name"),document.querySelector("#input-title"),document.querySelector("#input-link"),document.querySelector("#input-img"),document.querySelector("#popup-add"),document.querySelector("#popup-img"),document.querySelector(".profile__info"),document.querySelector(".profile__title"),document.querySelector(".popup__button-create"),document.querySelectorAll(".popup__input"),document.querySelector(".profile__edit")),i=document.querySelector("#profile-form"),u=document.querySelector(".profile__add"),c=document.querySelector(".elements"),a=document.querySelector("#elements-form"),l=(document.querySelectorAll(".popup"),document.querySelector("#profile__avatar-edit")),s=document.querySelector("#profile-avatar-form");function f(e){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},f(e)}function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,y(r.key),r)}}function y(e){var t=function(e){if("object"!=f(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=f(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==f(t)?t:t+""}var m=function(){return e=function e(t,n,r,o,i,u){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t.name,this._link=t.link,this._id=t._id,this._likes=t.likes,this._owner=t.owner,this._userId=r,this._cardId=t._id,this._element=this._getTemplate(),this._handleClickCard=n,this._handleDeleteCard=o,this._handleLikeCard=i,this._handleRemovelike=u},(t=[{key:"_getTemplate",value:function(){return document.querySelector(".template__elements").content.querySelector(".elements__container").cloneNode(!0)}},{key:"_setProperties",value:function(){var e=this;this._elementImage=this._element.querySelector(".elements__place-image"),this._elementName=this._element.querySelector(".elements__text"),this._likeBtn=this._element.querySelector(".elements__like"),this._dltBtn=this._element.querySelector(".elements__delete"),this._imgBtn=this._element.querySelector(".elements__place-image"),this._fullImg=document.querySelector(".popup__fullImg"),this._footerimg=document.querySelector(".popup__footer"),this._elementImage.src=this._link,this._elementName.textContent=this._name,this._popupImg=document.querySelector("#popup-img"),this._likes.some((function(t){return t._id===e._userId}))&&this._likeBtn.classList.toggle("elements__like-active"),this._likesCounter=this._element.querySelector(".elements__likes-number"),this._likesCounter.textContent=this._likes.length,this._elementImage.alt=this._name,this._element.id="id_".concat(this._cardId)}},{key:"_handleLike",value:function(){this._likeBtn.classList.toggle("elements__like-active")}},{key:"_changeLikeCounter",value:function(e){this._likes=e,this._likesCounter.textContent=e.length}},{key:"_handleDelete",value:function(){this._element.remove()}},{key:"handleOpenCard",value:function(){this.handleCardClick(this._name,this._link)}},{key:"_setListeners",value:function(){var e=this;this._likeBtn.addEventListener("click",(function(){e._likes.some((function(t){return t._id===e._userId}))?(e._handleRemovelike(e._cardId).then((function(t){e._changeLikeCounter(t.likes)})),e._likeBtn.classList.toggle("elements__like-active")):(e._handleLikeCard(e._cardId).then((function(t){e._changeLikeCounter(t.likes)})),e._likeBtn.classList.toggle("elements__like-active"))})),this._dltBtn.addEventListener("click",(function(){e._handleDeleteCard(e._cardId)})),this._imgBtn.addEventListener("click",(function(){e._handleClickCard(e._link,e._name)}))}},{key:"generateCard",value:function(){return this._setProperties(),this._setListeners(),this._element}}])&&p(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function d(e){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},d(e)}function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,v(r.key),r)}}function v(e){var t=function(e){if("object"!=d(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=d(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==d(t)?t:t+""}var b=function(){return e=function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.formElement=t,this.formSelector=n.formSelector,this.inputSelector=n.inputSelector,this.submitButtonSelector=n.submitButtonSelector,this.inactiveButtonClass=n.inactiveButtonClass,this.inputErrorClass=n.inputErrorClass,this.errorClass=n.errorClass,this.buttonElement=this.formElement.querySelector(n.submitButtonSelector),this.inputList=Array.from(this.formElement.querySelectorAll(this.inputSelector)),this._toggleButtonState()},(t=[{key:"_showInputError",value:function(e){var t=this.formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this.inputErrorClass),"Please fill in this field."==e.validationMessage?t.textContent="Preencha o campo.":"Please lengthen this text to 2 characters or more (you are currently using 1 character)."==e.validationMessage?t.textContent="Esse texto precisa ter 2 caracteres ou mais.":"Please enter a URL."==e.validationMessage&&(t.textContent="Entre com um endereÃ§o na Web."),t.classList.add(this.errorClass)}},{key:"_hideInputError",value:function(e){var t=this.formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this.inputErrorClass),t.classList.remove(this.errorClass),t.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_hasInvalidInput",value:function(){return this.inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this.buttonElement.classList.add(this.inactiveButtonClass),this.buttonElement.disabled=!0):(this.buttonElement.classList.remove(this.inactiveButtonClass),this.buttonElement.disabled=!1)}},{key:"_setEventListeners",value:function(){var e=this;this.formElement.addEventListener("submit",(function(e){e.preventDefault()})),this.inputList.forEach((function(t){t.addEventListener("input",(function(){e._toggleButtonState(),e._checkInputValidity(t)}))}))}},{key:"enableValidation",value:function(){this._setEventListeners()}}])&&h(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,g(r.key),r)}}function g(e){var t=function(e){if("object"!=_(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=_(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==_(t)?t:t+""}var k=function(){return e=function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderedItems=r,this._renderer=o,this._container=n},(t=[{key:"renderItems",value:function(){var e=this;this._renderedItems.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.append(e)}}])&&S(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function w(e){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},w(e)}function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,C(r.key),r)}}function C(e){var t=function(e){if("object"!=w(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=w(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==w(t)?t:t+""}var j=function(){return e=function e(t){var n,r,o,i=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),n=this,o=function(e){"Escape"===e.key&&i.close()},(r=C(r="_handleEscClose"))in n?Object.defineProperty(n,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):n[r]=o,this._popupSelector=document.querySelector(t),this.setEventListeners()},(t=[{key:"open",value:function(){this._popupSelector.classList.add("popup__show"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popupSelector.classList.remove("popup__show"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){var e=this;this._popupSelector.querySelector(".popup__close-button").addEventListener("click",(function(){e.close()})),this._popupSelector.querySelector(".popup__overlay").addEventListener("click",(function(){e.close()}))}}])&&E(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function P(e){return P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},P(e)}function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,L(r.key),r)}}function L(e){var t=function(e){if("object"!=P(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=P(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==P(t)?t:t+""}function q(e,t,n){return t=x(t),function(e,t){if(t&&("object"==P(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,I()?Reflect.construct(t,n||[],x(e).constructor):t.apply(e,n))}function I(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(I=function(){return!!e})()}function T(e,t,n,r){var o=B(x(1&r?e.prototype:e),t,n);return 2&r?function(e){return o.apply(n,e)}:o}function B(){return B="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=x(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},B.apply(null,arguments)}function x(e){return x=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},x(e)}function U(e,t){return U=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},U(e,t)}var R=function(e){function t(e,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=q(this,t,[e]))._handleSubmit=n,r._formelement=r._popupSelector.querySelector(".popup__form"),r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&U(e,t)}(t,e),n=t,(r=[{key:"getUserInfo",value:function(){var e=document.querySelector(this._popupSelector).querySelector("form"),t={name:document.querySelector(".profile__info").textContent,about:document.querySelector(".profile__title").textContent};Array.from(e.elements).forEach((function(e){e.name&&(e.value=t[e.name])}))}},{key:"getInputValues",value:function(){var e={};return this._formelement.querySelectorAll(".popup__input").forEach((function(t){e[t.name]=t.value})),console.log(e),e}},{key:"close",value:function(){T(t,"close",this,3)([]),this.toggleTextButton()}},{key:"toggleTextButton",value:function(){var e=this._popupSelector.querySelector(".popup__button"),t="";"Salvar"===e.textContent.trim()?t="Salvando...":"Criar"===e.textContent.trim()?t="Criando...":"Salvando..."===e.textContent.trim()?t="Salvar":"Criando..."===e.textContent.trim()&&(t="Criar"),e.textContent=t}},{key:"setEventListeners",value:function(){var e=this;T(t,"setEventListeners",this,3)([]),this._popupSelector.querySelector("form").addEventListener("submit",(function(t){t.preventDefault(),e.toggleTextButton(),e._handleSubmit(e.getInputValues()),e.close()}))}}])&&O(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(j);function D(e){return D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},D(e)}function A(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,V(r.key),r)}}function V(e){var t=function(e){if("object"!=D(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=D(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==D(t)?t:t+""}function N(e,t,n){return t=H(t),function(e,t){if(t&&("object"==D(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,J()?Reflect.construct(t,n||[],H(e).constructor):t.apply(e,n))}function J(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(J=function(){return!!e})()}function M(e,t,n,r){var o=G(H(1&r?e.prototype:e),t,n);return 2&r?function(e){return o.apply(n,e)}:o}function G(){return G="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=H(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},G.apply(null,arguments)}function H(e){return H=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},H(e)}function z(e,t){return z=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},z(e,t)}var F=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=N(this,t,[e])).handleCardClick=n.handleCardClick.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&z(e,t)}(t,e),n=t,(r=[{key:"handleCardClick",value:function(e,n){this._showImage=document.querySelector(".popup__fullImg"),this._showSubtitle=document.querySelector(".popup__footer"),this._showImage.alt="Fotografia de ".concat(e),this._showImage.src=n,this._showSubtitle.textContent=e,M(t,"open",this,3)([])}},{key:"close",value:function(){M(t,"close",this,3)([])}},{key:"setEventListeners",value:function(){M(t,"setEventListeners",this,3)([])}}])&&A(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(j);function W(e){return W="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},W(e)}function K(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,Q(r.key),r)}}function Q(e){var t=function(e){if("object"!=W(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=W(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==W(t)?t:t+""}var X=function(){return e=function e(t){var n=t.name,r=t.about,o=t.avatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(n),this._title=document.querySelector(r),this._avatar=document.querySelector(o)},(t=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,about:this._title.textContent,userAvatar:this._avatar.src}}},{key:"setUserInfo",value:function(e){e&&(this._name.textContent=e.name,this._title.textContent=e.about,e.avatar&&(this._avatar.src=e.avatar),e._id&&(this._userId=e._id))}}])&&K(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function Y(e){return Y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Y(e)}function Z(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,$(r.key),r)}}function $(e){var t=function(e){if("object"!=Y(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=Y(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==Y(t)?t:t+""}function ee(e,t,n){return t=oe(t),function(e,t){if(t&&("object"==Y(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,te()?Reflect.construct(t,n||[],oe(e).constructor):t.apply(e,n))}function te(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(te=function(){return!!e})()}function ne(e,t,n,r){var o=re(oe(1&r?e.prototype:e),t,n);return 2&r?function(e){return o.apply(n,e)}:o}function re(){return re="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=oe(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},re.apply(null,arguments)}function oe(e){return oe=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},oe(e)}function ie(e,t){return ie=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},ie(e,t)}var ue=function(e){function t(e,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=ee(this,t,[e]))._handleConfirmation=n,r._formElement=document.querySelector(".popup__form-confirmation"),r.cardId="",r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&ie(e,t)}(t,e),n=t,(r=[{key:"setEventListeners",value:function(){var e=this;ne(t,"setEventListeners",this,3)([]),document.querySelector(".popup__form-confirmation").addEventListener("submit",(function(n){n.preventDefault(),e._handleConfirmation(e.cardId),ne(t,"close",e,3)([])}))}},{key:"open",value:function(e){this.cardId=e,ne(t,"open",this,3)([])}},{key:"close",value:function(){ne(t,"close",this,3)([])}}])&&Z(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(j),ce=new X({name:".profile__info",about:".profile__title",avatar:".profile__avatar"}),ae=new r({baseUrl:"https://around.nomoreparties.co/v1/web-ptbr-cohort-12",headers:{authorization:" 55878f5d-532c-423a-a4a7-6c74dc5acc4e","Content-Type":"application/json"}});ae.getUserInfo().then((function(e){ce.setUserInfo(e),ae.getInitialCards().then((function(e){var t=new k({items:e,renderer:function(e){var n=new m(e,(function(){pe.handleCardClick(e.name,e.link)}),ce._userId,(function(){ye.open(e._id)}),(function(){return ae.addLike(e._id)}),(function(){return ae.removeLike(e._id)})).generateCard();t.addItem(n)}},c);t.renderItems()}))}));var le=new R("#popup-add",(function(e){console.log(e),e.link&&ae.addcards(e).then((function(e){var t=new m(e,(function(){pe.handleCardClick(item.name,item.link)}),ce._userId,(function(){ye.open(e._id)}),(function(e){return ae.addLike(e)}),(function(e){return ae.removeLike(e)})).generateCard();c.prepend(t),le.close()}))})),se=new R("#popup-profile",(function(e){ae.editProfile(e).then((function(e){ce.setUserInfo(e),se.close()}))}));se.setEventListeners();var fe=new R("#popup-avatar-profile",(function(e){ae.editAvatarProfile(e).then((function(e){ce.setUserInfo(e),fe.close()}))}));fe.setEventListeners();var pe=new F("#popup-img");pe.setEventListeners();var ye=new ue("#popup-delete-confirmation",(function(e){ae.deleteCard(e).then((function(){ye.close();var t=document.querySelector("#id_".concat(e));t&&t.remove()}))}));ye.setEventListeners(),o.addEventListener("click",(function(){se.open(),se.getUserInfo,me.enableValidation()})),l.addEventListener("click",(function(){fe.open()})),u.addEventListener("click",(function(){le.open()}));var me=new b(a,{formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"}),de=new b(i,{formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"}),he=new b(s,{formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"});me.enableValidation(),de.enableValidation(),he.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,